import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Scanner;

public class password {

    public static ArrayList<String> userArray = new ArrayList<>();
    public static ArrayList<String> passArray = new ArrayList<>();
    public static String FILE_PATH = "password.txt";

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        loadFromFile();

        while(true) { 
            System.out.println("Sign Up or Sign In");
            String choice = input.nextLine();

            if(choice.equalsIgnoreCase("Sign Up")) {
                signUp();
            } else if(choice.equalsIgnoreCase("Sign In")) {
                signIn();
            } else {
                System.out.println("Input Invalid");
            }
        }
    }

    public static void signUp() {
        Scanner input = new Scanner(System.in);

        String password = "";
        
        System.out.println("Enter your username: ");
        String username = input.nextLine();

        if(userArray.contains(username)) {
            System.out.println("Username Taken");
            return;
        }

        while(true) {
            System.out.println("Enter your password (At least 8 characters, 1 Special Character and 1 Number): ");
            password = input.nextLine();
            
            if(!isValidPassword(password)) {
                System.out.println("Password must be 8 characters, containing at least one: an Uppercase Letter, a Lowercase Letter, a Number, a Special Character");
            } else {
                break;
            }
        }

        System.out.println("Confirm your password: ");
        String passConfirm = input.nextLine();

        if(password.equals(passConfirm)) {
            String hashedPassword = hashPassword(password);

            if(hashedPassword != null) {
                System.out.println("Sign up successful");
                writeToFile(username,hashedPassword);
            }
        } else {
            System.out.println("Passwords do not match. Try again");
        }
    }

    public static void signIn() {
        Scanner input = new Scanner(System.in);

        System.out.println("Enter your username: ");
        String username = input.nextLine();
        
        System.out.println("Enter your password: ");
        String password = input.nextLine();

        if(userArray.contains(username)) {
            int index = userArray.indexOf(username);

            String hashedPassword = hashPassword(password);
            if(hashedPassword != null && hashedPassword.equals(passArray.get(index))) {
                System.out.println("Sign In Successful");
                System.exit(0);
            } else {
                System.out.println("Details Incorrect");
            }
        } else {
            System.out.println("Details Incorrect");
        }
    }

    public static void writeToFile(String username, String hashedPassword) {
        try(FileWriter fw = new FileWriter(FILE_PATH,true)) {
            fw.write(username + ":" + hashedPassword + "\n");
        } catch(IOException e) {
            System.out.println("Error occured saving details: ");
            e.printStackTrace();
        }
    }

    public static void loadFromFile() {
        try(BufferedReader fr = new BufferedReader(new FileReader(FILE_PATH))) {
            String line;
            while((line = fr.readLine()) != null) {
                String[] parts = line.split(":");
                if(parts.length == 2) {
                    userArray.add(parts[0]);
                    passArray.add(parts[1]);
                }
            }
        } catch(IOException e) {
            System.out.println("Error occured loading details: ");
            e.printStackTrace();
        }
    }

    public static String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashedBytes = md.digest(password.getBytes());
            StringBuilder sb = new StringBuilder();
            for(byte b : hashedBytes) {
                sb.append(String.format("%02x",b));
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException e) {
            System.out.println("Error SHA-256 Algorithm not found: ");
            e.printStackTrace();
            return null;
        }
    }

    public static boolean isValidPassword(String password) {
        if(password.length() < 8) {
            return false;
        }
        if(!password.matches(".*[A-Z].*")) {
            return false;
        }
        if(!password.matches(".*[a-z].*")) {
            return false;
        }
        if(!password.matches(".*\\d.*")) {
            return false;
        }
        return password.matches(".*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>/?].*");
    }
}
